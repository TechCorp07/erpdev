# Generated by Django 5.1.2 on 2025-08-07 21:46

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('system_admin', 'System Administrator'), ('business_owner', 'Business Owner/GM'), ('sales_manager', 'Sales Manager'), ('procurement_officer', 'Procurement Officer'), ('service_tech', 'Service Technician + Inventory Controller'), ('accounting', 'Accounting/Finance')], max_length=30, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('hierarchy_level', models.CharField(choices=[('level_1', 'System Administrator'), ('level_2', 'Business Owner/GM'), ('level_3', 'Department Managers'), ('level_4', 'Officers and Specialists'), ('level_5', 'Technicians')], max_length=10)),
                ('requires_gm_approval', models.BooleanField(default=False, help_text='Requires GM approval for sensitive operations')),
                ('can_assign_roles', models.BooleanField(default=False, help_text='Can assign/merge roles to other users')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['hierarchy_level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GuestSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True)),
                ('value', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.CharField(default='general', help_text='Category for organizing settings', max_length=50)),
            ],
            options={
                'ordering': ['category', 'key'],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('permission_change', 'Permission Change'), ('security', 'Security Event'), ('api', 'API Request'), ('custom', 'Custom')], max_length=30)),
                ('description', models.TextField()),
                ('object_type', models.CharField(blank=True, help_text="Type of the object affected, e.g. 'Quote', 'UserProfile'", max_length=100)),
                ('object_id', models.CharField(blank=True, help_text='ID of the object affected', max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('extra_data', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SessionActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ApprovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('crm', 'CRM Access'), ('blog', 'Blog Management'), ('shop', 'Shop Access'), ('general', 'General Account')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('requested_reason', models.TextField(blank=True, help_text='Why user needs this access')),
                ('business_justification', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_approval_requests', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approval_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-requested_at'],
                'unique_together': {('user', 'request_type', 'status')},
            },
        ),
        migrations.CreateModel(
            name='AppPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(choices=[('crm', 'CRM System'), ('inventory', 'Inventory Management'), ('shop', 'Shop Management'), ('website', 'Website Management'), ('blog', 'Blog Management'), ('hr', 'HR Management'), ('admin', 'Admin Panel'), ('quotes', 'Quote Management'), ('financial', 'Financial Data'), ('reports', 'Reporting System')], max_length=20)),
                ('permission_level', models.CharField(choices=[('view', 'View Only'), ('edit', 'Create and Edit'), ('admin', 'Full Admin Access')], default='view', max_length=10)),
                ('restrictions', models.JSONField(blank=True, default=dict, help_text='Specific restrictions within the app')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_permissions', to='core.employeerole')),
            ],
            options={
                'ordering': ['role', 'app', 'permission_level'],
                'unique_together': {('role', 'app')},
            },
        ),
        migrations.CreateModel(
            name='LoginActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('success', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='core_logina_user_id_ca0927_idx'), models.Index(fields=['ip_address', '-timestamp'], name='core_logina_ip_addr_29cacc_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('security', 'Security Alert'), ('role_change', 'Role Assignment'), ('approval', 'Approval Request'), ('system', 'System Notification'), ('welcome', 'Welcome Message')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read', '-created_at'], name='core_notifi_user_id_f286cd_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failure', 'Failed Login'), ('password_change', 'Password Changed'), ('profile_update', 'Profile Updated'), ('permission_change', 'Permissions Modified'), ('suspicious_activity', 'Suspicious Activity'), ('account_lockout', 'Account Locked'), ('social_login', 'Social Login'), ('approval_granted', 'Approval Granted'), ('approval_rejected', 'Approval Rejected')], max_length=30)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('details', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='core_securi_user_id_eb6502_idx'), models.Index(fields=['event_type', '-timestamp'], name='core_securi_event_t_5d2273_idx'), models.Index(fields=['ip_address', '-timestamp'], name='core_securi_ip_addr_bc5740_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failed', 'Failed Login'), ('password_change', 'Password Changed'), ('role_assigned', 'Role Assigned'), ('permission_changed', 'Permission Modified'), ('account_locked', 'Account Locked'), ('suspicious_activity', 'Suspicious Activity')], max_length=30)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='security_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='core_securi_user_id_6a8100_idx'), models.Index(fields=['event_type', '-timestamp'], name='core_securi_event_t_18c36c_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('employee', 'Employee'), ('blogger', 'Blogger'), ('customer', 'Customer')], default='customer', max_length=20)),
                ('department', models.CharField(blank=True, choices=[('sales', 'Sales and Marketing'), ('support', 'Customer Support'), ('technical', 'Technical'), ('admin', 'Administration'), ('procurement', 'Procurement'), ('finance', 'Finance/Accounting'), ('it', 'IT/Systems'), ('other', 'Other')], max_length=20, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('tax_number', models.CharField(blank=True, max_length=50)),
                ('business_registration', models.CharField(blank=True, max_length=100)),
                ('is_approved', models.BooleanField(default=False, help_text='General account approval')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('profile_completed', models.BooleanField(default=False)),
                ('profile_completion_date', models.DateTimeField(blank=True, null=True)),
                ('is_social_account', models.BooleanField(default=False)),
                ('social_provider', models.CharField(blank=True, choices=[('google', 'Google'), ('facebook', 'Facebook'), ('manual', 'Manual Registration')], max_length=20)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('last_password_change', models.DateTimeField(auto_now_add=True)),
                ('requires_password_change', models.BooleanField(default=False)),
                ('failed_login_count', models.IntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('password_history', models.JSONField(blank=True, default=list)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user_type', 'is_approved'], name='core_userpr_user_ty_ba3695_idx'), models.Index(fields=['department'], name='core_userpr_departm_aa80d8_idx'), models.Index(fields=['profile_completed'], name='core_userpr_profile_b318b5_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, help_text='Leave blank for permanent assignment', null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='core.employeerole')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_roles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_at'],
                'unique_together': {('user', 'role')},
            },
        ),
    ]
